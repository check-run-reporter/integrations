on: push
name: Validate
jobs:
  # TODO fix the fixup action to handle branch names other than master
  # fixup:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0
  #     - uses: ianwremmel/prevent-fixup-commits@v1.0.2

  # TODO fix the nopush action to handle branch names other than master
  # nopush:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2.3.4
  #       with:
  #         fetch-depth: 0
  #     - uses: ianwremmel/prevent-nopush-commits@v1.0.3

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: '14'
          cache: 'npm'
      - run: npm i -g npm@7
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - uses: actions/upload-artifact@v2
        with:
          name: action-dist
          path: integrations/action/dist
      - uses: actions/upload-artifact@v2
        with:
          name: buildkite-bin
          path: integrations/check-run-reporter-buildkite-plugin/bin

  lint:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: '14'
          cache: 'npm'
      - uses: actions/download-artifact@v2
        with:
          name: action-dist
          path: integrations/action/dist
      - run: npm i -g npm@7
      - run: npm ci
      - run: npm run lint
        env:
          ESLINT_FORMAT_OPTIONS: '--format json-with-metadata --output-file reports/style/eslint.json'
          TSC_OPTIONS: '| tee reports/style/tsc.log'
      - uses: ./integrations/action
        if: ${{ always() }}
        with:
          token: '62fe22eb-69e1-436d-b85a-82b14847e4cc'
          label: ESLint
          report: 'reports/style/eslint.json'
      - uses: ./integrations/action
        if: ${{ always() }}
        with:
          token: '62fe22eb-69e1-436d-b85a-82b14847e4cc'
          label: TSC
          report: 'reports/style/tsc.log'

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        nodeCount: [2]
        nodeIndex: [0, 1]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: '14'
          cache: 'npm'
      - uses: actions/download-artifact@v2
        with:
          name: action-dist
          path: integrations/action/dist
      - run: npm i -g npm@7
      - run: npm ci
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: ./integrations/action
        id: split
        with:
          token: '62fe22eb-69e1-436d-b85a-82b14847e4cc'
          label: Unit Tests
          nodeCount: ${{ matrix.nodeCount }}
          nodeIndex: ${{ matrix.nodeIndex }}
          tests: 'src/**/*.spec.ts'
      - run: npm test -- ${{ steps.split.outputs.tests }}
      - uses: ./integrations/action
        if: ${{ always() }}
        with:
          token: '62fe22eb-69e1-436d-b85a-82b14847e4cc'
          label: Unit Tests
          report: 'reports/junit/**/*.xml'

  lint-integrations-buildkite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: 'docker://buildkite/plugin-linter'
        with:
          args:  --id check-run-reporter/check-run-reporter --path /github/workspace/integrations/check-run-reporter-buildkite-plugin

  test-integrations-buildkite:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/download-artifact@v2
        with:
          name: buildkite-bin
          path: integrations/check-run-reporter-buildkite-plugin/bin
      # artifacts strip file permissions
      - run: chmod +x integrations/check-run-reporter-buildkite-plugin/bin/*
      - run: ./integrations/check-run-reporter-buildkite-plugin/tests/bats/bin/bats ./integrations/check-run-reporter-buildkite-plugin/tests/post-command.bats

  release:
    needs:
      - build
      # TODO - fixup
      - lint
      - lint-integrations-buildkite
      # TODO - nopush
      - test
      - test-integrations-buildkite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: '14'
          cache: 'npm'
      - run: npm i -g npm@7
      - run: npm ci
      # Remember: Can't use artifacts here because we need to build during
      # semantic-release to figure out the version number. Also, artifacts mess
      # with file permissions (like +x).
      - run: npx semantic-release
        env:
          CHECK_RUN_REPORTER__INTEGRATIONS_PUBLISH_TOKEN: ${{ secrets.CHECK_RUN_REPORTER__INTEGRATIONS_PUBLISH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
